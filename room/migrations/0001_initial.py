# Generated by Django 4.0 on 2021-12-23 19:24

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import room.validator


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cuser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, max_length=150, unique=True)),
                ('password', models.CharField(blank=True, default='123', max_length=128, null=True)),
                ('first_name', models.CharField(blank=True, max_length=150, null=True)),
                ('last_name', models.CharField(blank=True, max_length=150, null=True)),
                ('full_name', models.CharField(blank=True, max_length=305, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('mobile', models.CharField(max_length=11, validators=[room.validator.PhoneValidator()])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'cuser',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='County',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'county',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='OwnerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField(blank=True, max_length=1000, null=True)),
                ('national_code', models.CharField(max_length=50, unique=True, validators=[room.validator.CodeValidators()])),
                ('postal_code', models.CharField(max_length=50, unique=True, validators=[room.validator.CodeValidators()])),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner_profiles', to='room.cuser')),
            ],
            options={
                'verbose_name': 'owner profile',
                'verbose_name_plural': 'owner profiles',
                'db_table': 'owner_profile',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'province',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_no', models.IntegerField(default=101)),
                ('room_type', models.CharField(default='standard', max_length=200)),
                ('no_of_beds', models.IntegerField(default=3)),
            ],
            options={
                'db_table': 'room',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Reserved',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_date', models.DateTimeField()),
                ('to_date', models.DateTimeField()),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner_profiles', related_query_name='owner_profile', to='room.ownerprofile')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', related_query_name='room', to='room.room')),
            ],
            options={
                'db_table': 'reserved',
                'ordering': ('from_date',),
            },
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.TextField(max_length=50)),
                ('phone_number', models.CharField(max_length=17, validators=[room.validator.PhoneValidator()])),
                ('rating', models.IntegerField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')])),
                ('county', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hotel_countys', related_query_name='hotel_county', to='room.county')),
            ],
            options={
                'db_table': 'hotel',
                'ordering': ('rating',),
            },
        ),
        migrations.CreateModel(
            name='CustomerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField(blank=True, max_length=1000, null=True)),
                ('national_code', models.CharField(max_length=50, unique=True, validators=[room.validator.CodeValidators()])),
                ('postal_code', models.CharField(max_length=50, unique=True, validators=[room.validator.CodeValidators()])),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers_profiles', to='room.cuser')),
            ],
            options={
                'verbose_name': 'customer profile',
                'verbose_name_plural': 'customer profiles',
                'db_table': 'customer_profile',
                'ordering': ('-id',),
            },
        ),
        migrations.AddField(
            model_name='county',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='provinces', related_query_name='province', to='room.province'),
        ),
    ]
